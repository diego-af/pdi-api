services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development # Multi-stage build para dev
    container_name: backend_app
    restart: always
    ports:
      - '3000:3000'
    volumes:
      - .:/app
      - /app/node_modules
      - /app/dist # Evita conflitos com build
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=senha
      - DB_NAME=pdi-db
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true # Para melhor hot reload
      - JWT_SECRET={JWT_SECRET}
      - JWT_EXPIRES_IN=1D

    networks:
      - backend_net
    stdin_open: true
    tty: true
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine # Versão mais leve
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: senha
      POSTGRES_DB: pdi-db
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d # Scripts de inicialização
    networks:
      - backend_net
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d pdi-db']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Opcional: PgAdmin para desenvolvimento
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_dev
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@dev.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '8080:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend_net
    profiles:
      - dev # Só inicia com --profile dev

volumes:
  pgdata:
    driver: local
  pgadmin_data:
    driver: local

networks:
  backend_net:
    driver: bridge
    name: pdi_network
